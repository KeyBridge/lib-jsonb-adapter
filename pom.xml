<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>keybridge.lib</groupId>
  <artifactId>jsonb-adapter</artifactId>
  <version>1.0.0</version>
  <packaging>jar</packaging>

  <name>lib-jsonb-adapter</name>
  <description>Jakarta JSON Binding (JSON-B) utilities

    JSON-B is a standard binding layer for converting Java objects to/from JSON messages.
    Jsonb provides an abstraction over the JSON Binding framework operations.
    It defines a default mapping algorithm for converting existing Java classes to JSON,
    while enabling developers to customize the mapping process through the use of
    Java annotations.

    Includes support for JSON-P. JSONP stands for JSON with Padding.
    JSON-P is a method for sending JSON data without worrying about cross-domain issues.
    Requesting a file from another domain can cause problems, due to cross-domain policy.
    Requesting an external script from another domain does not have this problem.
    JSONP uses this advantage, and request files using the script tag instead of the XMLHttpRequest object.

    Note that the three Json-B dependencies are includes in the Glassfish application
    server and are marked as 'provided' in this library.
    - org.glassfish.jakarta.json
    - jakarta.json.bind-api
    - org.eclipse.yasson

    @see http://json-b.net/
    @see https://en.wikipedia.org/wiki/JSON
    @see https://en.wikipedia.org/wiki/JSONP
    @see https://tools.ietf.org/html/rfc7493  The I-JSON Message Format

    History
    v0.0.1 new project created 2020-07-14 to replace lib-json-adapter based on fasterxml
    v1.0.0 - working library 2020-07-15
    - add formatted double adapters 2020-12-01
    - add JsonbListAdapter 2021-01-16



  </description>

  <organization>
    <name>Key Bridge</name>
    <url>http://keybridge.ch</url>
  </organization>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <!--LocationTech JTS Topology Suite-->
    <!--Version 1.16.0 released 18-Sep-2018-->
    <!--Version 1.18.0 released 23-Dec-2020-->
    <jts.version>1.18.0</jts.version>
  </properties>

  <dependencies>
    <!-- JSON-P -->
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>jakarta.json</artifactId>
      <version>1.1.5</version>
      <scope>provided</scope>
    </dependency>

    <!-- JSON-B API -->
    <dependency>
      <groupId>jakarta.json.bind</groupId>
      <artifactId>jakarta.json.bind-api</artifactId>
      <version>1.0.1</version>
      <scope>provided</scope>
    </dependency>

    <!-- Yasson (JSON-B implementation) -->
    <dependency>
      <groupId>org.eclipse</groupId>
      <artifactId>yasson</artifactId>
      <version>1.0.3</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.locationtech.jts</groupId>
      <artifactId>jts-core</artifactId>
      <version>${jts.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.thedeanda</groupId>
      <artifactId>lorem</artifactId>
      <version>2.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <distributionManagement>
    <repository>
      <id>${repository.name}</id>
      <url>${repository.url}</url>
    </repository>
  </distributionManagement>

</project>